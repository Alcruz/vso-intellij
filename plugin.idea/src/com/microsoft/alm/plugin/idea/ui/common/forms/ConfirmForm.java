// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license. See License.txt in the project root.

package com.microsoft.alm.plugin.idea.ui.common.forms;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import com.microsoft.alm.plugin.idea.ui.controls.IconPanel;
import com.microsoft.alm.plugin.idea.ui.controls.WrappingLabel;

import javax.swing.Icon;
import javax.swing.JComponent;
import javax.swing.JPanel;
import java.awt.Insets;

public class ConfirmForm {
    private IconPanel iconPanel;
    private WrappingLabel messageLabel;
    private JPanel confirmPanel;
    private final String message;
    private final Icon icon;

    public ConfirmForm(final String message, final Icon icon) {
        this.message = message;
        this.icon = icon;
    }

    protected void setIcon(final Icon icon) {
        if (icon != null) {
            iconPanel.setIcon(icon);
        }
    }

    protected void setMessage(final String message) {
        messageLabel.setText(message);
    }

    public JComponent getContentPanel() {
        ensureInitialized();
        return confirmPanel;
    }

    private void ensureInitialized() {
        setMessage(message);
        setIcon(icon);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        confirmPanel = new JPanel();
        confirmPanel.setLayout(new GridLayoutManager(3, 2, new Insets(0, 0, 0, 0), -1, -1));
        iconPanel = new IconPanel();
        confirmPanel.add(iconPanel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_NORTHWEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        messageLabel = new WrappingLabel();
        confirmPanel.add(messageLabel, new GridConstraints(0, 1, 2, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        confirmPanel.add(spacer1, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return confirmPanel;
    }
}
